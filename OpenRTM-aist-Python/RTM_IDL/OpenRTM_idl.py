# Python stubs generated by omniidl from OpenRTM.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(2,0, __file__)

# #include "SDOPackage.idl"
import SDOPackage_idl
_0_SDOPackage = omniORB.openModule("SDOPackage")
_0_SDOPackage__POA = omniORB.openModule("SDOPackage__POA")
# #include "RTC.idl"
import RTC_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

#
# Start of module "RTC"
#
__name__ = "RTC"
_0_RTC = omniORB.openModule("RTC", r"OpenRTM.idl")
_0_RTC__POA = omniORB.openModule("RTC__POA", r"OpenRTM.idl")


# interface DataFlowComponent
_0_RTC._d_DataFlowComponent = (omniORB.tcInternal.tv_objref, "IDL:openrtm.aist.go.jp/RTC/DataFlowComponent:1.0", "DataFlowComponent")
omniORB.typeMapping["IDL:openrtm.aist.go.jp/RTC/DataFlowComponent:1.0"] = _0_RTC._d_DataFlowComponent
_0_RTC.DataFlowComponent = omniORB.newEmptyClass()
class DataFlowComponent (_0_RTC.RTObject, _0_RTC.DataFlowParticipant):
    _NP_RepositoryId = _0_RTC._d_DataFlowComponent[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RTC.DataFlowComponent = DataFlowComponent
_0_RTC._tc_DataFlowComponent = omniORB.tcInternal.createTypeCode(_0_RTC._d_DataFlowComponent)
omniORB.registerType(DataFlowComponent._NP_RepositoryId, _0_RTC._d_DataFlowComponent, _0_RTC._tc_DataFlowComponent)

# DataFlowComponent object reference
class _objref_DataFlowComponent (_0_RTC._objref_RTObject, _0_RTC._objref_DataFlowParticipant):
    _NP_RepositoryId = DataFlowComponent._NP_RepositoryId

    def __init__(self):
        _0_RTC._objref_RTObject.__init__(self)
        _0_RTC._objref_DataFlowParticipant.__init__(self)

    __methods__ = [] + _0_RTC._objref_RTObject.__methods__ + _0_RTC._objref_DataFlowParticipant.__methods__

omniORB.registerObjref(DataFlowComponent._NP_RepositoryId, _objref_DataFlowComponent)
_0_RTC._objref_DataFlowComponent = _objref_DataFlowComponent
del DataFlowComponent, _objref_DataFlowComponent

# DataFlowComponent skeleton
__name__ = "RTC__POA"
class DataFlowComponent (_0_RTC__POA.RTObject, _0_RTC__POA.DataFlowParticipant):
    _NP_RepositoryId = _0_RTC.DataFlowComponent._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_RTC__POA.RTObject._omni_op_d)
    _omni_op_d.update(_0_RTC__POA.DataFlowParticipant._omni_op_d)

DataFlowComponent._omni_skeleton = DataFlowComponent
_0_RTC__POA.DataFlowComponent = DataFlowComponent
del DataFlowComponent
__name__ = "RTC"

# interface FiniteStateMachineComponent
_0_RTC._d_FiniteStateMachineComponent = (omniORB.tcInternal.tv_objref, "IDL:openrtm.aist.go.jp/RTC/FiniteStateMachineComponent:1.0", "FiniteStateMachineComponent")
omniORB.typeMapping["IDL:openrtm.aist.go.jp/RTC/FiniteStateMachineComponent:1.0"] = _0_RTC._d_FiniteStateMachineComponent
_0_RTC.FiniteStateMachineComponent = omniORB.newEmptyClass()
class FiniteStateMachineComponent (_0_RTC.RTObject, _0_RTC.FsmParticipant):
    _NP_RepositoryId = _0_RTC._d_FiniteStateMachineComponent[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RTC.FiniteStateMachineComponent = FiniteStateMachineComponent
_0_RTC._tc_FiniteStateMachineComponent = omniORB.tcInternal.createTypeCode(_0_RTC._d_FiniteStateMachineComponent)
omniORB.registerType(FiniteStateMachineComponent._NP_RepositoryId, _0_RTC._d_FiniteStateMachineComponent, _0_RTC._tc_FiniteStateMachineComponent)

# FiniteStateMachineComponent object reference
class _objref_FiniteStateMachineComponent (_0_RTC._objref_RTObject, _0_RTC._objref_FsmParticipant):
    _NP_RepositoryId = FiniteStateMachineComponent._NP_RepositoryId

    def __init__(self):
        _0_RTC._objref_RTObject.__init__(self)
        _0_RTC._objref_FsmParticipant.__init__(self)

    __methods__ = [] + _0_RTC._objref_RTObject.__methods__ + _0_RTC._objref_FsmParticipant.__methods__

omniORB.registerObjref(FiniteStateMachineComponent._NP_RepositoryId, _objref_FiniteStateMachineComponent)
_0_RTC._objref_FiniteStateMachineComponent = _objref_FiniteStateMachineComponent
del FiniteStateMachineComponent, _objref_FiniteStateMachineComponent

# FiniteStateMachineComponent skeleton
__name__ = "RTC__POA"
class FiniteStateMachineComponent (_0_RTC__POA.RTObject, _0_RTC__POA.FsmParticipant):
    _NP_RepositoryId = _0_RTC.FiniteStateMachineComponent._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_RTC__POA.RTObject._omni_op_d)
    _omni_op_d.update(_0_RTC__POA.FsmParticipant._omni_op_d)

FiniteStateMachineComponent._omni_skeleton = FiniteStateMachineComponent
_0_RTC__POA.FiniteStateMachineComponent = FiniteStateMachineComponent
del FiniteStateMachineComponent
__name__ = "RTC"

# interface DataFlowFiniteStateMachineComponent
_0_RTC._d_DataFlowFiniteStateMachineComponent = (omniORB.tcInternal.tv_objref, "IDL:openrtm.aist.go.jp/RTC/DataFlowFiniteStateMachineComponent:1.0", "DataFlowFiniteStateMachineComponent")
omniORB.typeMapping["IDL:openrtm.aist.go.jp/RTC/DataFlowFiniteStateMachineComponent:1.0"] = _0_RTC._d_DataFlowFiniteStateMachineComponent
_0_RTC.DataFlowFiniteStateMachineComponent = omniORB.newEmptyClass()
class DataFlowFiniteStateMachineComponent (_0_RTC.RTObject, _0_RTC.DataFlowParticipant, _0_RTC.FsmParticipant):
    _NP_RepositoryId = _0_RTC._d_DataFlowFiniteStateMachineComponent[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RTC.DataFlowFiniteStateMachineComponent = DataFlowFiniteStateMachineComponent
_0_RTC._tc_DataFlowFiniteStateMachineComponent = omniORB.tcInternal.createTypeCode(_0_RTC._d_DataFlowFiniteStateMachineComponent)
omniORB.registerType(DataFlowFiniteStateMachineComponent._NP_RepositoryId, _0_RTC._d_DataFlowFiniteStateMachineComponent, _0_RTC._tc_DataFlowFiniteStateMachineComponent)

# DataFlowFiniteStateMachineComponent object reference
class _objref_DataFlowFiniteStateMachineComponent (_0_RTC._objref_RTObject, _0_RTC._objref_DataFlowParticipant, _0_RTC._objref_FsmParticipant):
    _NP_RepositoryId = DataFlowFiniteStateMachineComponent._NP_RepositoryId

    def __init__(self):
        _0_RTC._objref_RTObject.__init__(self)
        _0_RTC._objref_DataFlowParticipant.__init__(self)
        _0_RTC._objref_FsmParticipant.__init__(self)

    __methods__ = [] + _0_RTC._objref_RTObject.__methods__ + _0_RTC._objref_DataFlowParticipant.__methods__ + _0_RTC._objref_FsmParticipant.__methods__

omniORB.registerObjref(DataFlowFiniteStateMachineComponent._NP_RepositoryId, _objref_DataFlowFiniteStateMachineComponent)
_0_RTC._objref_DataFlowFiniteStateMachineComponent = _objref_DataFlowFiniteStateMachineComponent
del DataFlowFiniteStateMachineComponent, _objref_DataFlowFiniteStateMachineComponent

# DataFlowFiniteStateMachineComponent skeleton
__name__ = "RTC__POA"
class DataFlowFiniteStateMachineComponent (_0_RTC__POA.RTObject, _0_RTC__POA.DataFlowParticipant, _0_RTC__POA.FsmParticipant):
    _NP_RepositoryId = _0_RTC.DataFlowFiniteStateMachineComponent._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_RTC__POA.RTObject._omni_op_d)
    _omni_op_d.update(_0_RTC__POA.DataFlowParticipant._omni_op_d)
    _omni_op_d.update(_0_RTC__POA.FsmParticipant._omni_op_d)

DataFlowFiniteStateMachineComponent._omni_skeleton = DataFlowFiniteStateMachineComponent
_0_RTC__POA.DataFlowFiniteStateMachineComponent = DataFlowFiniteStateMachineComponent
del DataFlowFiniteStateMachineComponent
__name__ = "RTC"

# interface DataFlowMultiModeComponent
_0_RTC._d_DataFlowMultiModeComponent = (omniORB.tcInternal.tv_objref, "IDL:openrtm.aist.go.jp/RTC/DataFlowMultiModeComponent:1.0", "DataFlowMultiModeComponent")
omniORB.typeMapping["IDL:openrtm.aist.go.jp/RTC/DataFlowMultiModeComponent:1.0"] = _0_RTC._d_DataFlowMultiModeComponent
_0_RTC.DataFlowMultiModeComponent = omniORB.newEmptyClass()
class DataFlowMultiModeComponent (_0_RTC.RTObject, _0_RTC.DataFlowParticipant, _0_RTC.MultiModeObject):
    _NP_RepositoryId = _0_RTC._d_DataFlowMultiModeComponent[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RTC.DataFlowMultiModeComponent = DataFlowMultiModeComponent
_0_RTC._tc_DataFlowMultiModeComponent = omniORB.tcInternal.createTypeCode(_0_RTC._d_DataFlowMultiModeComponent)
omniORB.registerType(DataFlowMultiModeComponent._NP_RepositoryId, _0_RTC._d_DataFlowMultiModeComponent, _0_RTC._tc_DataFlowMultiModeComponent)

# DataFlowMultiModeComponent object reference
class _objref_DataFlowMultiModeComponent (_0_RTC._objref_RTObject, _0_RTC._objref_DataFlowParticipant, _0_RTC._objref_MultiModeObject):
    _NP_RepositoryId = DataFlowMultiModeComponent._NP_RepositoryId

    def __init__(self):
        _0_RTC._objref_RTObject.__init__(self)
        _0_RTC._objref_DataFlowParticipant.__init__(self)
        _0_RTC._objref_MultiModeObject.__init__(self)

    __methods__ = [] + _0_RTC._objref_RTObject.__methods__ + _0_RTC._objref_DataFlowParticipant.__methods__ + _0_RTC._objref_MultiModeObject.__methods__

omniORB.registerObjref(DataFlowMultiModeComponent._NP_RepositoryId, _objref_DataFlowMultiModeComponent)
_0_RTC._objref_DataFlowMultiModeComponent = _objref_DataFlowMultiModeComponent
del DataFlowMultiModeComponent, _objref_DataFlowMultiModeComponent

# DataFlowMultiModeComponent skeleton
__name__ = "RTC__POA"
class DataFlowMultiModeComponent (_0_RTC__POA.RTObject, _0_RTC__POA.DataFlowParticipant, _0_RTC__POA.MultiModeObject):
    _NP_RepositoryId = _0_RTC.DataFlowMultiModeComponent._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_RTC__POA.RTObject._omni_op_d)
    _omni_op_d.update(_0_RTC__POA.DataFlowParticipant._omni_op_d)
    _omni_op_d.update(_0_RTC__POA.MultiModeObject._omni_op_d)

DataFlowMultiModeComponent._omni_skeleton = DataFlowMultiModeComponent
_0_RTC__POA.DataFlowMultiModeComponent = DataFlowMultiModeComponent
del DataFlowMultiModeComponent
__name__ = "RTC"

# interface FiniteStateMachineMultiModeComponent
_0_RTC._d_FiniteStateMachineMultiModeComponent = (omniORB.tcInternal.tv_objref, "IDL:openrtm.aist.go.jp/RTC/FiniteStateMachineMultiModeComponent:1.0", "FiniteStateMachineMultiModeComponent")
omniORB.typeMapping["IDL:openrtm.aist.go.jp/RTC/FiniteStateMachineMultiModeComponent:1.0"] = _0_RTC._d_FiniteStateMachineMultiModeComponent
_0_RTC.FiniteStateMachineMultiModeComponent = omniORB.newEmptyClass()
class FiniteStateMachineMultiModeComponent (_0_RTC.RTObject, _0_RTC.FsmParticipant, _0_RTC.MultiModeObject):
    _NP_RepositoryId = _0_RTC._d_FiniteStateMachineMultiModeComponent[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RTC.FiniteStateMachineMultiModeComponent = FiniteStateMachineMultiModeComponent
_0_RTC._tc_FiniteStateMachineMultiModeComponent = omniORB.tcInternal.createTypeCode(_0_RTC._d_FiniteStateMachineMultiModeComponent)
omniORB.registerType(FiniteStateMachineMultiModeComponent._NP_RepositoryId, _0_RTC._d_FiniteStateMachineMultiModeComponent, _0_RTC._tc_FiniteStateMachineMultiModeComponent)

# FiniteStateMachineMultiModeComponent object reference
class _objref_FiniteStateMachineMultiModeComponent (_0_RTC._objref_RTObject, _0_RTC._objref_FsmParticipant, _0_RTC._objref_MultiModeObject):
    _NP_RepositoryId = FiniteStateMachineMultiModeComponent._NP_RepositoryId

    def __init__(self):
        _0_RTC._objref_RTObject.__init__(self)
        _0_RTC._objref_FsmParticipant.__init__(self)
        _0_RTC._objref_MultiModeObject.__init__(self)

    __methods__ = [] + _0_RTC._objref_RTObject.__methods__ + _0_RTC._objref_FsmParticipant.__methods__ + _0_RTC._objref_MultiModeObject.__methods__

omniORB.registerObjref(FiniteStateMachineMultiModeComponent._NP_RepositoryId, _objref_FiniteStateMachineMultiModeComponent)
_0_RTC._objref_FiniteStateMachineMultiModeComponent = _objref_FiniteStateMachineMultiModeComponent
del FiniteStateMachineMultiModeComponent, _objref_FiniteStateMachineMultiModeComponent

# FiniteStateMachineMultiModeComponent skeleton
__name__ = "RTC__POA"
class FiniteStateMachineMultiModeComponent (_0_RTC__POA.RTObject, _0_RTC__POA.FsmParticipant, _0_RTC__POA.MultiModeObject):
    _NP_RepositoryId = _0_RTC.FiniteStateMachineMultiModeComponent._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_RTC__POA.RTObject._omni_op_d)
    _omni_op_d.update(_0_RTC__POA.FsmParticipant._omni_op_d)
    _omni_op_d.update(_0_RTC__POA.MultiModeObject._omni_op_d)

FiniteStateMachineMultiModeComponent._omni_skeleton = FiniteStateMachineMultiModeComponent
_0_RTC__POA.FiniteStateMachineMultiModeComponent = FiniteStateMachineMultiModeComponent
del FiniteStateMachineMultiModeComponent
__name__ = "RTC"

# interface DataFlowFiniteStateMachineMultiModeComponent
_0_RTC._d_DataFlowFiniteStateMachineMultiModeComponent = (omniORB.tcInternal.tv_objref, "IDL:openrtm.aist.go.jp/RTC/DataFlowFiniteStateMachineMultiModeComponent:1.0", "DataFlowFiniteStateMachineMultiModeComponent")
omniORB.typeMapping["IDL:openrtm.aist.go.jp/RTC/DataFlowFiniteStateMachineMultiModeComponent:1.0"] = _0_RTC._d_DataFlowFiniteStateMachineMultiModeComponent
_0_RTC.DataFlowFiniteStateMachineMultiModeComponent = omniORB.newEmptyClass()
class DataFlowFiniteStateMachineMultiModeComponent (_0_RTC.RTObject, _0_RTC.DataFlowParticipant, _0_RTC.FsmParticipant, _0_RTC.MultiModeObject):
    _NP_RepositoryId = _0_RTC._d_DataFlowFiniteStateMachineMultiModeComponent[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RTC.DataFlowFiniteStateMachineMultiModeComponent = DataFlowFiniteStateMachineMultiModeComponent
_0_RTC._tc_DataFlowFiniteStateMachineMultiModeComponent = omniORB.tcInternal.createTypeCode(_0_RTC._d_DataFlowFiniteStateMachineMultiModeComponent)
omniORB.registerType(DataFlowFiniteStateMachineMultiModeComponent._NP_RepositoryId, _0_RTC._d_DataFlowFiniteStateMachineMultiModeComponent, _0_RTC._tc_DataFlowFiniteStateMachineMultiModeComponent)

# DataFlowFiniteStateMachineMultiModeComponent object reference
class _objref_DataFlowFiniteStateMachineMultiModeComponent (_0_RTC._objref_RTObject, _0_RTC._objref_DataFlowParticipant, _0_RTC._objref_FsmParticipant, _0_RTC._objref_MultiModeObject):
    _NP_RepositoryId = DataFlowFiniteStateMachineMultiModeComponent._NP_RepositoryId

    def __init__(self):
        _0_RTC._objref_RTObject.__init__(self)
        _0_RTC._objref_DataFlowParticipant.__init__(self)
        _0_RTC._objref_FsmParticipant.__init__(self)
        _0_RTC._objref_MultiModeObject.__init__(self)

    __methods__ = [] + _0_RTC._objref_RTObject.__methods__ + _0_RTC._objref_DataFlowParticipant.__methods__ + _0_RTC._objref_FsmParticipant.__methods__ + _0_RTC._objref_MultiModeObject.__methods__

omniORB.registerObjref(DataFlowFiniteStateMachineMultiModeComponent._NP_RepositoryId, _objref_DataFlowFiniteStateMachineMultiModeComponent)
_0_RTC._objref_DataFlowFiniteStateMachineMultiModeComponent = _objref_DataFlowFiniteStateMachineMultiModeComponent
del DataFlowFiniteStateMachineMultiModeComponent, _objref_DataFlowFiniteStateMachineMultiModeComponent

# DataFlowFiniteStateMachineMultiModeComponent skeleton
__name__ = "RTC__POA"
class DataFlowFiniteStateMachineMultiModeComponent (_0_RTC__POA.RTObject, _0_RTC__POA.DataFlowParticipant, _0_RTC__POA.FsmParticipant, _0_RTC__POA.MultiModeObject):
    _NP_RepositoryId = _0_RTC.DataFlowFiniteStateMachineMultiModeComponent._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_RTC__POA.RTObject._omni_op_d)
    _omni_op_d.update(_0_RTC__POA.DataFlowParticipant._omni_op_d)
    _omni_op_d.update(_0_RTC__POA.FsmParticipant._omni_op_d)
    _omni_op_d.update(_0_RTC__POA.MultiModeObject._omni_op_d)

DataFlowFiniteStateMachineMultiModeComponent._omni_skeleton = DataFlowFiniteStateMachineMultiModeComponent
_0_RTC__POA.DataFlowFiniteStateMachineMultiModeComponent = DataFlowFiniteStateMachineMultiModeComponent
del DataFlowFiniteStateMachineMultiModeComponent
__name__ = "RTC"

# interface ExtTrigExecutionContextService
_0_RTC._d_ExtTrigExecutionContextService = (omniORB.tcInternal.tv_objref, "IDL:openrtm.aist.go.jp/RTC/ExtTrigExecutionContextService:1.0", "ExtTrigExecutionContextService")
omniORB.typeMapping["IDL:openrtm.aist.go.jp/RTC/ExtTrigExecutionContextService:1.0"] = _0_RTC._d_ExtTrigExecutionContextService
_0_RTC.ExtTrigExecutionContextService = omniORB.newEmptyClass()
class ExtTrigExecutionContextService (_0_RTC.ExecutionContextService):
    _NP_RepositoryId = _0_RTC._d_ExtTrigExecutionContextService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RTC.ExtTrigExecutionContextService = ExtTrigExecutionContextService
_0_RTC._tc_ExtTrigExecutionContextService = omniORB.tcInternal.createTypeCode(_0_RTC._d_ExtTrigExecutionContextService)
omniORB.registerType(ExtTrigExecutionContextService._NP_RepositoryId, _0_RTC._d_ExtTrigExecutionContextService, _0_RTC._tc_ExtTrigExecutionContextService)

# ExtTrigExecutionContextService operations and attributes
ExtTrigExecutionContextService._d_tick = ((), None, None)

# ExtTrigExecutionContextService object reference
class _objref_ExtTrigExecutionContextService (_0_RTC._objref_ExecutionContextService):
    _NP_RepositoryId = ExtTrigExecutionContextService._NP_RepositoryId

    def __init__(self):
        _0_RTC._objref_ExecutionContextService.__init__(self)

    def tick(self, *args):
        return _omnipy.invoke(self, "tick", _0_RTC.ExtTrigExecutionContextService._d_tick, args)

    __methods__ = ["tick"] + _0_RTC._objref_ExecutionContextService.__methods__

omniORB.registerObjref(ExtTrigExecutionContextService._NP_RepositoryId, _objref_ExtTrigExecutionContextService)
_0_RTC._objref_ExtTrigExecutionContextService = _objref_ExtTrigExecutionContextService
del ExtTrigExecutionContextService, _objref_ExtTrigExecutionContextService

# ExtTrigExecutionContextService skeleton
__name__ = "RTC__POA"
class ExtTrigExecutionContextService (_0_RTC__POA.ExecutionContextService):
    _NP_RepositoryId = _0_RTC.ExtTrigExecutionContextService._NP_RepositoryId


    _omni_op_d = {"tick": _0_RTC.ExtTrigExecutionContextService._d_tick}
    _omni_op_d.update(_0_RTC__POA.ExecutionContextService._omni_op_d)

ExtTrigExecutionContextService._omni_skeleton = ExtTrigExecutionContextService
_0_RTC__POA.ExtTrigExecutionContextService = ExtTrigExecutionContextService
del ExtTrigExecutionContextService
__name__ = "RTC"

#
# End of module "RTC"
#
__name__ = "OpenRTM_idl"

_exported_modules = ( "RTC", )

# The end.
